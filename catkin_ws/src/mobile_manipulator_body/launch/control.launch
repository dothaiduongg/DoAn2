<launch>

   <!-- Load joint controller configurations from YAML file to parameter server  -->
  <rosparam file="$(find mobile_manipulator_body)/config/control.yaml" command="load"/>

   load the controllers 
  <node name="controller_spawner"
    pkg="controller_manager"
    type="spawner" respawn="false"
    output="screen" ns="/skbot"
    args="joint_state_controller
      rightWheel_effort_controller
      leftWheel_effort_controller"
  />


   convert joint states to TF transforms for rviz, etc 
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
    <param name="robot_description" command="$(find xacro)/xacro.py '$(find mobile_manipulator_body)/urdf/robot_base.urdf.xacro'" />
    <remap from="/joint_states" to="/skbot/joint_states" />
  </node>

</launch>



<!-- <?xml version="1.0"?>
<launch>
  
  <rosparam file="$(find mobile_manipulator_body)/config/controllers.yaml" command="load"/>
  <rosparam file="$(find mobile_manipulator_body)/config/joint_limits.yaml" command="load"/>

  <arg name="model" default="$(find mobile_manipulator_body)/urdf/mobile_robot.urdf.xacro"/>
  
  <param name="robot_description" command="$(find xacro)/xacro.py $(arg model)" />
  
  <node name="robot_hardware_interface" pkg="mobile_manipulator_body" type="mobile_robot_hardware_interface" output="screen">
     <remap from="/mobile_robot/mobile_base_controller/cmd_vel" to="/cmd_vel"/>
   </node>

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" >
  </node>
  
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find mobile_manipulator_body)/config/rviz_config.rviz"/>
  
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen"
        args="
        	/mobile_robot/joints_update
            /mobile_robot/mobile_base_controller" >
  </node>

  <-<node name="telop" pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py"/>-
 
</launch> -->
